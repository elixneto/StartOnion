<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StartOnion.Camada.CrossCutting</name>
    </assembly>
    <members>
        <member name="T:StartOnion.Camada.CrossCutting.Exceptions.JwtNaoConfiguradoException">
            <summary>
            Exceção de JWT não configurado
            </summary>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Exceptions.JwtNaoConfiguradoException.#ctor">
            <summary>
            Construtor padrão
            </summary>
        </member>
        <member name="T:StartOnion.Camada.CrossCutting.Extensoes.Linq.ExtensoesDeLinq">
            <summary>
            Extensões para System.Linq
            </summary>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Extensoes.Linq.ExtensoesDeLinq.SkipAndTake``1(System.Linq.IQueryable{``0},System.Int32,System.Int32)">
            <summary>
            Faz a paginação de uma query
            </summary>
            <typeparam name="T">Modelo/Entidade</typeparam>
            <param name="queryable">Query</param>
            <param name="page">Número da página</param>
            <param name="countPerPage">Quantidade de registros por página</param>
            <returns></returns>
        </member>
        <member name="T:StartOnion.Camada.CrossCutting.Notificacoes.INotificadorContexto">
            <summary>
            Contexto do padrão de notificações (Notification Pattern)
            </summary>
        </member>
        <member name="P:StartOnion.Camada.CrossCutting.Notificacoes.INotificadorContexto.Notificacoes">
            <summary>
            Lista de notificações
            </summary>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Notificacoes.INotificadorContexto.Adicionar(System.String)">
            <summary>
            Adiciona uma mensagem no contexto de notificação
            </summary>
            <param name="mensagem">Mensagem</param>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Notificacoes.INotificadorContexto.Adicionar(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adiciona uma coleção de mensagens no contexto de notificação
            </summary>
            <param name="mensagens">Mensagens</param>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Notificacoes.INotificadorContexto.Adicionar(StartOnion.Camada.CrossCutting.Notificacoes.Notificavel)">
            <summary>
            Adiciona uma coleção de mensagens no contexto de notificação
            </summary>
            <param name="modeloNotificavel">Classe que herda de <code>Notificavel</code></param>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Notificacoes.INotificadorContexto.Adicionar(StartOnion.Camada.CrossCutting.Notificacoes.Notificavel[])">
            <summary>
            Adiciona uma coleção de mensagens no contexto de notificação através de várias classe notificáveis
            </summary>
            <param name="modelosNotificaveis">Classes que herdam de <code>Notificavel</code></param>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Notificacoes.INotificadorContexto.PossuiNotificacoes">
            <summary>
            Possui notificações no contexto?
            </summary>
            <returns></returns>
        </member>
        <member name="T:StartOnion.Camada.CrossCutting.Notificacoes.NotificadorContexto">
            <summary>
            Contexto do padrão de notificações (Notification Pattern)
            </summary>
        </member>
        <member name="P:StartOnion.Camada.CrossCutting.Notificacoes.NotificadorContexto.Notificacoes">
            <summary>
            Lista de notificações
            </summary>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Notificacoes.NotificadorContexto.Adicionar(System.String)">
            <summary>
            Adiciona uma mensagem no contexto de notificação
            </summary>
            <param name="mensagem">Mensagem</param>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Notificacoes.NotificadorContexto.Adicionar(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adiciona uma coleção de mensagens no contexto de notificação
            </summary>
            <param name="mensagens">Mensagens</param>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Notificacoes.NotificadorContexto.Adicionar(StartOnion.Camada.CrossCutting.Notificacoes.Notificavel)">
            <summary>
            Adiciona uma coleção de mensagens no contexto de notificação através de uma classe notificável
            </summary>
            <param name="notificavel">Classe que herda de Notificavel</param>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Notificacoes.NotificadorContexto.Adicionar(StartOnion.Camada.CrossCutting.Notificacoes.Notificavel[])">
            <summary>
            Adiciona uma coleção de mensagens no contexto de notificação através de várias classe notificáveis
            </summary>
            <param name="notificaveis">Classes que herdam de Notificavel</param>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Notificacoes.NotificadorContexto.PossuiNotificacoes">
            <summary>
            Possui notificações no contexto?
            </summary>
            <returns></returns>
        </member>
        <member name="T:StartOnion.Camada.CrossCutting.Notificacoes.Notificavel">
            <summary>
            Classe notificável utilizando FluentValidation
            </summary>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Notificacoes.Notificavel.AdicionarNotificacao(System.String)">
            <summary>
            Adiciona uma notificação na classe
            </summary>
            <param name="notificacao"></param>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Notificacoes.Notificavel.AdicionarNotificacoes(System.Collections.Generic.IList{FluentValidation.Results.ValidationFailure})">
            <summary>
            Adiciona notificações na classe
            </summary>
            <param name="erros"></param>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Notificacoes.Notificavel.EhValido">
            <summary>
            A classe não possui notificações?
            </summary>
            <returns></returns>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Notificacoes.Notificavel.ObterNotificacoes">
            <summary>
            Retorna as notificações
            </summary>
            <returns></returns>
        </member>
        <member name="T:StartOnion.Camada.CrossCutting.Notificacoes.Validador`1">
            <summary>
            Validador de classes notificáveis
            </summary>
            <typeparam name="T">Classe notificável</typeparam>
        </member>
        <member name="T:StartOnion.Camada.CrossCutting.Providers.Autenticacao.ITokenJwtProvider">
            <summary>
            Provedor de Token JWT
            </summary>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Providers.Autenticacao.ITokenJwtProvider.GerarToken(System.String)">
            <summary>
            Retorna o token JWT
            </summary>
            <param name="Id">Identificador único do usuário</param>
            <returns></returns>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Providers.Autenticacao.ITokenJwtProvider.GerarToken(System.String,System.Nullable{System.DateTime})">
            <summary>
            Retorna o token JWT
            </summary>
            <param name="Id">Identificador único do usuário</param>
            <param name="dataDeExpiracao">Data de expiração do token</param>
            <returns></returns>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Providers.Autenticacao.ITokenJwtProvider.GerarToken(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime})">
            <summary>
            Retorna o token JWT
            </summary>
            <param name="Id">Identificador único do usuário</param>
            <param name="roles">Lista de roles a serem incluídas como claims</param>
            /// <param name="dataDeExpiracao">Data de expiração do token</param>
            <returns></returns>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Providers.Autenticacao.ITokenJwtProvider.GerarToken(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime})">
            <summary>
            Retorna o token JWT
            </summary>
            <param name="Id">Identificador único do usuário</param>
            <param name="claimsPersonalizados">Claims personalizados</param>
            <param name="roles">Lista de roles a serem incluídas como claims</param>
            <param name="dataDeExpiracao">Data de expiração do token</param>
            <returns></returns>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Providers.Autenticacao.ITokenJwtProvider.ObterIssuer">
            <summary>
            Issuer do JWT
            </summary>
            <returns></returns>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Providers.Autenticacao.ITokenJwtProvider.ObterAudience">
            <summary>
            Audience do JWT
            </summary>
            <returns></returns>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Providers.Autenticacao.ITokenJwtProvider.ObterChaveDeSegurancaSimetrica">
            <summary>
            SymmetricSecurityKey da chave de segurança
            </summary>
            <returns></returns>
        </member>
        <member name="T:StartOnion.Camada.CrossCutting.Providers.Autenticacao.TokenJwtProvider">
            <summary>
            Provedor de Token JWT
            </summary>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Providers.Autenticacao.TokenJwtProvider.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Construtor padrão com injeção de IConfiguration
            </summary>
            <param name="configuracao"></param>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Providers.Autenticacao.TokenJwtProvider.GerarToken(System.String)">
            <summary>
            Retorna o token JWT
            </summary>
            <param name="Id">Identificador único do usuário</param>
            <returns></returns>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Providers.Autenticacao.TokenJwtProvider.GerarToken(System.String,System.Nullable{System.DateTime})">
            <summary>
            Retorna o token JWT
            </summary>
            <param name="Id">Identificador único do usuário</param>
            <param name="dataDeExpiracao">Data de expiração do token</param>
            <returns></returns>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Providers.Autenticacao.TokenJwtProvider.GerarToken(System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime})">
            <summary>
            Retorna o token JWT
            </summary>
            <param name="Id">Identificador único do usuário</param>
            <param name="roles">Lista de roles a serem incluídas como claims</param>
            /// <param name="dataDeExpiracao">Data de expiração do token</param>
            <returns></returns>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Providers.Autenticacao.TokenJwtProvider.GerarToken(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime})">
            <summary>
            Retorna o token JWT
            </summary>
            <param name="Id">Identificador único do usuário</param>
            <param name="claimsPersonalizados">Claims personalizados</param>
            <param name="roles">Lista de roles a serem incluídas como claims</param>
            <param name="dataDeExpiracao">Data de expiração do token</param>
            <returns></returns>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Providers.Autenticacao.TokenJwtProvider.ObterIssuer">
            <summary>
            Issuer do JWT
            </summary>
            <returns></returns>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Providers.Autenticacao.TokenJwtProvider.ObterAudience">
            <summary>
            Audience do JWT
            </summary>
            <returns></returns>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Providers.Autenticacao.TokenJwtProvider.ObterChaveDeSegurancaSimetrica">
            <summary>
            SymmetricSecurityKey da chave de segurança
            </summary>
            <returns></returns>
        </member>
        <member name="T:StartOnion.Camada.CrossCutting.Utilidades.Seguranca.CriptografiaMD5">
            <summary>
            Criptografia MD5
            </summary>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Utilidades.Seguranca.CriptografiaMD5.ConverterTexto(System.String,System.Boolean)">
            <summary>
            Converte um texto em string MD5
            </summary>
            <param name="texto">String a ser criptografada</param>
            <param name="maiusculo">Retorno em maiúsculo?</param>
            <returns></returns>
        </member>
        <member name="T:StartOnion.Camada.CrossCutting.Utilidades.Compactacao.Compactador">
            <summary>
            Compressor de arquivos
            </summary>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Utilidades.Compactacao.Compactador.CompactarUm(System.Byte[])">
            <summary>
            Compacta 1 arquivo
            </summary>
            <param name="arquivoEmBytes">Conteúdo do arquivo em Bytes</param>
            <returns></returns>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Utilidades.Compactacao.Compactador.CompactarMuitos(System.Collections.Generic.IEnumerable{System.Byte[]})">
            <summary>
            Compacta muitos arquivos
            </summary>
            <param name="arquivosEmBytes"></param>
            <returns></returns>
        </member>
        <member name="T:StartOnion.Camada.CrossCutting.Utilidades.Validadores.ValidadorDeCNPJ">
            <summary>
            Validador de CNPJ
            </summary>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Utilidades.Validadores.ValidadorDeCNPJ.#ctor(System.String)">
            <summary>
            Construtor padrão
            </summary>
            <param name="cnpj">Número do CNPJ (com ou sem másccara)</param>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Utilidades.Validadores.ValidadorDeCNPJ.EhValido">
            <summary>
            O CNPJ é válido?
            </summary>
            <returns></returns>
        </member>
        <member name="T:StartOnion.Camada.CrossCutting.Utilidades.Validadores.ValidadorDeCPF">
            <summary>
            Validador de CPF
            </summary>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Utilidades.Validadores.ValidadorDeCPF.#ctor(System.String)">
            <summary>
            Construtor padrão
            </summary>
            <param name="cpf">Número do CPF (com ou sem máscara)</param>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Utilidades.Validadores.ValidadorDeCPF.EhValido">
            <summary>
            O CPF é válido?
            </summary>
            <returns></returns>
        </member>
        <member name="T:StartOnion.Camada.CrossCutting.Utilidades.Validadores.ValidadorDeEmail">
            <summary>
            Validador de Email
            </summary>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Utilidades.Validadores.ValidadorDeEmail.#ctor(System.String)">
            <summary>
            Construtor pdrão
            </summary>
            <param name="email">Email</param>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Utilidades.Validadores.ValidadorDeEmail.EhValido">
            <summary>
            O Email é válido?
            </summary>
            <returns></returns>
        </member>
        <member name="T:StartOnion.Camada.CrossCutting.Seguranca.Criptografia.CriptografiaScrypt">
            <summary>
            Criptografia Scrypt
            </summary>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Seguranca.Criptografia.CriptografiaScrypt.CriptografarSenha(System.String,System.String)">
            <summary>
            Retorna o hash de criptografia
            </summary>
            <param name="senha">Senha para ser criptografada</param>
            <param name="salt">Salt</param>
            <returns></returns>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Seguranca.Criptografia.CriptografiaScrypt.CriptografarTexto(System.String)">
            <summary>
            Retorna o hash de criptografia
            </summary>
            <param name="texto">Texto para ser criptografado</param>
            <returns></returns>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Seguranca.Criptografia.CriptografiaScrypt.ValidarSenhaComHash(System.String,System.String,System.String)">
            <summary>
            Retorna <code>true</code> ou <code>false</code> se a senha é o hash
            </summary>
            <param name="senha">Senha em plain text a ser verificada</param>
            <param name="salt">Salt da senha</param>
            <param name="hash">Hash a ser verificado</param>
            <returns></returns>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Seguranca.Criptografia.CriptografiaScrypt.ValidarTextoComHash(System.String,System.String)">
            <summary>
            Retorna <code>true</code> ou <code>false</code> se o texto é o hash
            </summary>
            <param name="texto">Texto em plain text a ser verificado</param>
            <param name="hash">Hash a ser verificado</param>
            <returns></returns>
        </member>
        <member name="T:StartOnion.Camada.CrossCutting.Seguranca.GeradorDeSalt">
            <summary>
            Gerador de salt (baseado em <code>RNGCryptoServiceProvider</code>)
            </summary>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Seguranca.GeradorDeSalt.Gerar(System.Int32)">
            <summary>
            Gera um salt aleatório e retorna em string
            </summary>
            <param name="tamanho">Tamanho do salt</param>
            <returns></returns>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Seguranca.GeradorDeSalt.GerarEmBytes(System.Int32)">
            <summary>
            Gera um salt aleatório e retorna em bytes
            </summary>
            <param name="tamanho">Tamanho do salt</param>
            <returns></returns>
        </member>
        <member name="M:StartOnion.Camada.CrossCutting.Seguranca.GeradorDeSalt.GerarEmBase64(System.Int32)">
            <summary>
            Gera um salt aleatório e retorna em string codificado em Base64
            </summary>
            <param name="tamanho">Tamanho do salt</param>
            <returns></returns>
        </member>
    </members>
</doc>
